HloModule m, is_scheduled=true

add {
  rhs = f16[] parameter(1)
  lhs = f16[] parameter(0)
  ROOT add.1 = f16[] add(lhs, rhs)
}

m0 {
  p = f16[1024,100000] parameter(0)
  ROOT n = f16[1024,100000] tanh(p)
}

m1 {
  p = f16[1024,100000] parameter(0)
  ROOT n = f16[1024,100000] tanh(p)
}

n0 {
  p = f16[1024,1000] parameter(0)
  ROOT n = f16[1024,1000] negate(p)
}

n1 {
  p = f16[1024,1000] parameter(0)
  ROOT n = f16[1024,1000] negate(p)
}

ENTRY e {
  p0 = f16[16384,1024] parameter(0)
  p1 = f16[1024,4] parameter(1)
  p2 = f16[1024,1000] parameter(2)
  p3 = f16[1024,100000] parameter(3)

  // warmup, scramble caches
  m0 = f16[1024,100000] fusion(p3), kind=kLoop, calls=m0
  // this one just prevents copy insertion
  n0 = f16[1024,1000] fusion(p2), kind=kLoop, calls=n0
  // prefetch happens in parallel with this allreduce
  ar0s = f16[1024,1000] all-reduce-start(n0), replica_groups={}, to_apply=add,
    backend_config={"is_sync":false}
  ar0d = f16[1024,1000] all-reduce-done(ar0s)
  // p0 is prefetched for this one
  prefetch_target0 = f16[16384,4] custom-call(p0, p1),
    custom_call_target="__cublas$gemm",
    backend_config={"alpha_real":1,"beta":0,"dot_dimension_numbers":{"lhs_contracting_dimensions":["1"],"rhs_contracting_dimensions":["0"],"lhs_batch_dimensions":[],"rhs_batch_dimensions":[]},"alpha_imag":0,"precision_config":{"operand_precision":["DEFAULT","DEFAULT"]},"epilogue":"DEFAULT"}
  // here the cache policy reset kernel triggers


  // this block is same as above but without prefetch

  m1 = f16[1024,100000] fusion(p3), kind=kLoop, calls=m1
  n1 = f16[1024,1000] fusion(p2), kind=kLoop, calls=n1
  ar1s = f16[1024,1000] all-reduce-start(n1), replica_groups={}, to_apply=add,
    backend_config={"is_sync":false}
  ar1d = f16[1024,1000] all-reduce-done(ar1s)
  d1 = f16[16384,4] custom-call(p0, p1), custom_call_target="__cublas$gemm",
    backend_config={"alpha_real":1,"beta":0,"dot_dimension_numbers":{"lhs_contracting_dimensions":["1"],"rhs_contracting_dimensions":["0"],"lhs_batch_dimensions":[],"rhs_batch_dimensions":[]},"alpha_imag":0,"precision_config":{"operand_precision":["DEFAULT","DEFAULT"]},"epilogue":"DEFAULT"}

  ROOT t = tuple(ar0d, ar1d, prefetch_target0, d1, m0, m1)
}
